server:
  port: 8911

spring:
  application:
    name: gateway-service
  kafka:
    admin:
      auto-create: true  # Разрешает Spring Kafka создавать топики
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        auto.create.topics.enable: true  # Для продюсера
        delivery.timeout.ms: 120000

  sleuth:
    trace-id128: true # 128-битный traceId
    supports-join: true

  cloud:
    gateway:
      routes:
        - id: public-auth_java_api
          uri: http://localhost:8079
          predicates:
            - Path=/v1/api/auth/login

        - id: private_hello_api
          uri: http://localhost:8081
          predicates:
            - Path=/v1/api/hello/**
      default-filters:
        - AuthFilter
#        - KafkaGatewayFilter

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0 # Обязательно для генерации traceId
    propagation:
      type: W3C # Используем современный формат

#  Более специфичные пути должны быть указаны раньше в списке.
security:
  public-paths:
    - /v1/api/auth/login
#    - /v1/api/public/**  # Все подпути
#    - /v2/api/docs/*.html  # Конкретные файлы

  role-paths:
    - path: /v1/api/hello
      roles: [USER, ADMIN]
#    - path: /v1/api/profile  # Доступно всем аутентифицированным
#      roles: [ ]

logging:
  level:
    io.netty: DEBUG